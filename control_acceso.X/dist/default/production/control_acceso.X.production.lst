

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Feb 21 10:26:11 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 22/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177     0000                     	;# 
   178     0001                     	;# 
   179     0002                     	;# 
   180     0003                     	;# 
   181     0004                     	;# 
   182     0005                     	;# 
   183     0006                     	;# 
   184     0007                     	;# 
   185     0008                     	;# 
   186     0009                     	;# 
   187     000A                     	;# 
   188     000B                     	;# 
   189     000C                     	;# 
   190     000D                     	;# 
   191     000E                     	;# 
   192     000E                     	;# 
   193     000F                     	;# 
   194     0010                     	;# 
   195     0011                     	;# 
   196     0012                     	;# 
   197     0013                     	;# 
   198     0014                     	;# 
   199     0015                     	;# 
   200     0015                     	;# 
   201     0016                     	;# 
   202     0017                     	;# 
   203     0018                     	;# 
   204     0019                     	;# 
   205     001A                     	;# 
   206     001B                     	;# 
   207     001B                     	;# 
   208     001C                     	;# 
   209     001D                     	;# 
   210     001E                     	;# 
   211     001F                     	;# 
   212     0081                     	;# 
   213     0085                     	;# 
   214     0086                     	;# 
   215     0087                     	;# 
   216     0088                     	;# 
   217     0089                     	;# 
   218     008C                     	;# 
   219     008D                     	;# 
   220     008E                     	;# 
   221     0091                     	;# 
   222     0092                     	;# 
   223     0093                     	;# 
   224     0094                     	;# 
   225     0098                     	;# 
   226     0099                     	;# 
   227     009C                     	;# 
   228     009D                     	;# 
   229     009E                     	;# 
   230     009F                     	;# 
   231     010C                     	;# 
   232     010D                     	;# 
   233     010E                     	;# 
   234     010F                     	;# 
   235     018C                     	;# 
   236     018D                     	;# 
   237     0000                     	;# 
   238     0001                     	;# 
   239     0002                     	;# 
   240     0003                     	;# 
   241     0004                     	;# 
   242     0005                     	;# 
   243     0006                     	;# 
   244     0007                     	;# 
   245     0008                     	;# 
   246     0009                     	;# 
   247     000A                     	;# 
   248     000B                     	;# 
   249     000C                     	;# 
   250     000D                     	;# 
   251     000E                     	;# 
   252     000E                     	;# 
   253     000F                     	;# 
   254     0010                     	;# 
   255     0011                     	;# 
   256     0012                     	;# 
   257     0013                     	;# 
   258     0014                     	;# 
   259     0015                     	;# 
   260     0015                     	;# 
   261     0016                     	;# 
   262     0017                     	;# 
   263     0018                     	;# 
   264     0019                     	;# 
   265     001A                     	;# 
   266     001B                     	;# 
   267     001B                     	;# 
   268     001C                     	;# 
   269     001D                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     0081                     	;# 
   273     0085                     	;# 
   274     0086                     	;# 
   275     0087                     	;# 
   276     0088                     	;# 
   277     0089                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     008E                     	;# 
   281     0091                     	;# 
   282     0092                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0098                     	;# 
   286     0099                     	;# 
   287     009C                     	;# 
   288     009D                     	;# 
   289     009E                     	;# 
   290     009F                     	;# 
   291     010C                     	;# 
   292     010D                     	;# 
   293     010E                     	;# 
   294     010F                     	;# 
   295     018C                     	;# 
   296     018D                     	;# 
   297                           
   298                           	psect	idataBANK0
   299     05E1                     __pidataBANK0:
   300                           
   301                           ;initializer for _keypad
   302     05E1  3430               	retlw	48
   303     05E2  3430               	retlw	48
   304     05E3  3430               	retlw	48
   305     05E4  3430               	retlw	48
   306     05E5  3431               	retlw	49
   307     05E6  3434               	retlw	52
   308     05E7  3437               	retlw	55
   309     05E8  342A               	retlw	42
   310     05E9  3432               	retlw	50
   311     05EA  3435               	retlw	53
   312     05EB  3438               	retlw	56
   313     05EC  3430               	retlw	48
   314     05ED  3433               	retlw	51
   315     05EE  3436               	retlw	54
   316     05EF  3439               	retlw	57
   317     05F0  3423               	retlw	35
   318     0006                     _PORTB	set	6
   319     0008                     _PORTD	set	8
   320     0033                     _RB3	set	51
   321     0032                     _RB2	set	50
   322     0031                     _RB1	set	49
   323     0037                     _RB7	set	55
   324     0036                     _RB6	set	54
   325     0035                     _RB5	set	53
   326     0034                     _RB4	set	52
   327     0038                     _RC0	set	56
   328     0039                     _RC1	set	57
   329     0081                     _OPTION_REG	set	129
   330     0086                     _TRISB	set	134
   331     0087                     _TRISC	set	135
   332     0088                     _TRISD	set	136
   333     042B                     _TRISA3	set	1067
   334                           
   335                           	psect	strings
   336     0003                     __pstrings:
   337     0003                     stringtab:
   338     0003                     __stringtab:
   339                           
   340                           ;	String table - string pointers are 1 byte each
   341     0003  1BFF               	btfsc	btemp+1,7
   342     0004  280D               	ljmp	stringcode
   343     0005  1383               	bcf	3,7
   344     0006  187F               	btfsc	btemp+1,0
   345     0007  1783               	bsf	3,7
   346     0008  0800               	movf	0,w
   347     0009  0A84               	incf	4,f
   348     000A  1903               	skipnz
   349     000B  0AFF               	incf	btemp+1,f
   350     000C  0008               	return
   351     000D                     stringcode:
   352     000D                     stringdir:
   353     000D  3000               	movlw	high stringdir
   354     000E  008A               	movwf	10
   355     000F  0804               	movf	4,w
   356     0010  0A84               	incf	4,f
   357     0011  0782               	addwf	2,f
   358     0012                     __stringbase:
   359     0012  3400               	retlw	0
   360     0013                     __end_of__stringtab:
   361     0013                     STR_2:
   362     0013  3420               	retlw	32	;' '
   363     0014  3420               	retlw	32	;' '
   364     0015  3420               	retlw	32	;' '
   365     0016  3420               	retlw	32	;' '
   366     0017  3420               	retlw	32	;' '
   367     0018  3420               	retlw	32	;' '
   368     0019  3420               	retlw	32	;' '
   369     001A  3420               	retlw	32	;' '
   370     001B  3420               	retlw	32	;' '
   371     001C  3420               	retlw	32	;' '
   372     001D  3420               	retlw	32	;' '
   373     001E  3420               	retlw	32	;' '
   374     001F  3420               	retlw	32	;' '
   375     0020  3420               	retlw	32	;' '
   376     0021  3420               	retlw	32	;' '
   377     0022  3420               	retlw	32	;' '
   378     0023  3400               	retlw	0
   379     0024                     STR_1:
   380     0024  3454               	retlw	84	;'T'
   381     0025  3475               	retlw	117	;'u'
   382     0026  3474               	retlw	116	;'t'
   383     0027  346F               	retlw	111	;'o'
   384     0028  3472               	retlw	114	;'r'
   385     0029  3469               	retlw	105	;'i'
   386     002A  3461               	retlw	97	;'a'
   387     002B  346C               	retlw	108	;'l'
   388     002C  3420               	retlw	32	;' '
   389     002D  3445               	retlw	69	;'E'
   390     002E  3443               	retlw	67	;'C'
   391     002F  3433               	retlw	51	;'3'
   392     0030  3430               	retlw	48	;'0'
   393     0031  3438               	retlw	56	;'8'
   394     0032  3431               	retlw	49	;'1'
   395     0033  343A               	retlw	58	;':'
   396     0034  3400               	retlw	0
   397                           
   398                           	psect	cinit
   399     07EA                     start_initialization:	
   400                           ; #config settings
   401                           
   402     07EA                     __initialization:
   403                           
   404                           ; Initialize objects allocated to BANK0
   405     07EA  1383               	bcf	3,7	;select IRP bank0
   406     07EB  3030               	movlw	low (__pdataBANK0+16)
   407     07EC  00FD               	movwf	btemp+-1
   408     07ED  3005               	movlw	high __pidataBANK0
   409     07EE  00FE               	movwf	btemp
   410     07EF  30E1               	movlw	low __pidataBANK0
   411     07F0  00FF               	movwf	btemp+1
   412     07F1  3020               	movlw	low __pdataBANK0
   413     07F2  0084               	movwf	4
   414     07F3  120A  118A  2608  120A  118A  	fcall	init_ram0
   415                           
   416                           ; Clear objects allocated to COMMON
   417     07F8  01F9               	clrf	__pbssCOMMON& (0+127)
   418     07F9  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   419     07FA  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   420     07FB  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   421     07FC                     end_of_initialization:	
   422                           ;End of C runtime variable initialization code
   423                           
   424     07FC                     __end_of__initialization:
   425     07FC  0183               	clrf	3
   426     07FD  120A  118A  2E8A   	ljmp	_main	;jump to C main() function
   427                           
   428                           	psect	bssCOMMON
   429     0079                     __pbssCOMMON:
   430     0079                     main@F953:
   431     0079                     	ds	2
   432     007B                     _colloc:
   433     007B                     	ds	1
   434     007C                     _rowloc:
   435     007C                     	ds	1
   436                           
   437                           	psect	dataBANK0
   438     0020                     __pdataBANK0:
   439     0020                     _keypad:
   440     0020                     	ds	16
   441                           
   442                           	psect	inittext
   443     0604                     init_fetch0:	
   444                           ;	Called with low address in FSR and high address in W
   445                           
   446     0604  087E               	movf	btemp,w
   447     0605  008A               	movwf	10
   448     0606  087F               	movf	btemp+1,w
   449     0607  0082               	movwf	2
   450     0608                     init_ram0:	
   451                           ;Called with:
   452                           ;	high address of idata address in btemp 
   453                           ;	low address of idata address in btemp+1 
   454                           ;	low address of data in FSR
   455                           ;	high address + 1 of data in btemp-1
   456                           
   457     0608  120A  118A  2604  120A  118A  	fcall	init_fetch0
   458     060D  0080               	movwf	0
   459     060E  0A84               	incf	4,f
   460     060F  0804               	movf	4,w
   461     0610  067D               	xorwf	btemp+-1,w
   462     0611  1903               	btfsc	3,2
   463     0612  3400               	retlw	0
   464     0613  0AFF               	incf	btemp+1,f
   465     0614  1903               	btfsc	3,2
   466     0615  0AFE               	incf	btemp,f
   467     0616  2E08               	goto	init_ram0
   468                           
   469                           	psect	cstackCOMMON
   470     0070                     __pcstackCOMMON:
   471     0070                     ?_lcd_init:
   472     0070                     ?_keyboard_init:	
   473                           ; 1 bytes @ 0x0
   474                           
   475     0070                     ??_keyboard_init:	
   476                           ; 1 bytes @ 0x0
   477                           
   478     0070                     ?_keyboard_get:	
   479                           ; 1 bytes @ 0x0
   480                           
   481     0070                     ??_keyboard_get:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0070                     ?_init:	
   485                           ; 1 bytes @ 0x0
   486                           
   487     0070                     ??_init:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ?_main:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     ?_lcd_cmd:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ??_lcd_cmd:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ?_lcd_data:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ??_lcd_data:	
   503                           ; 1 bytes @ 0x0
   504                           
   505                           
   506                           ; 1 bytes @ 0x0
   507     0070                     	ds	2
   508     0072                     lcd_cmd@cmd:
   509     0072                     lcd_data@data:	
   510                           ; 1 bytes @ 0x2
   511                           
   512                           
   513                           ; 1 bytes @ 0x2
   514     0072                     	ds	1
   515     0073                     ??_lcd_init:
   516     0073                     ?_lcd_goto:	
   517                           ; 1 bytes @ 0x3
   518                           
   519     0073                     ?_lcd_puts:	
   520                           ; 1 bytes @ 0x3
   521                           
   522     0073                     lcd_goto@line:	
   523                           ; 1 bytes @ 0x3
   524                           
   525     0073                     lcd_puts@s:	
   526                           ; 1 bytes @ 0x3
   527                           
   528                           
   529                           ; 2 bytes @ 0x3
   530     0073                     	ds	1
   531     0074                     ??_lcd_goto:
   532     0074                     lcd_goto@pos:	
   533                           ; 1 bytes @ 0x4
   534                           
   535                           
   536                           ; 1 bytes @ 0x4
   537     0074                     	ds	1
   538     0075                     ??_lcd_puts:
   539     0075                     ??_main:	
   540                           ; 1 bytes @ 0x5
   541                           
   542     0075                     main@key_str:	
   543                           ; 1 bytes @ 0x5
   544                           
   545                           
   546                           ; 2 bytes @ 0x5
   547     0075                     	ds	2
   548     0077                     main@new_key:
   549                           
   550                           ; 1 bytes @ 0x7
   551     0077                     	ds	1
   552     0078                     main@key:
   553                           
   554                           ; 1 bytes @ 0x8
   555     0078                     	ds	1
   556                           
   557                           	psect	maintext
   558     068A                     __pmaintext:	
   559 ;;
   560 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   561 ;;
   562 ;; *************** function _main *****************
   563 ;; Defined at:
   564 ;;		line 24 in file "newmain.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  new_key         1    7[COMMON] unsigned char 
   569 ;;  key_str         2    5[COMMON] unsigned char [2]
   570 ;;  key             1    8[COMMON] unsigned char 
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : B00/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         4       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0
   583 ;;      Totals:         4       0       0       0       0
   584 ;;Total ram usage:        4 bytes
   585 ;; Hardware stack levels required when called: 2
   586 ;; This function calls:
   587 ;;		_init
   588 ;;		_keyboard_get
   589 ;;		_keyboard_init
   590 ;;		_lcd_goto
   591 ;;		_lcd_init
   592 ;;		_lcd_puts
   593 ;; This function is called by:
   594 ;;		Startup code after reset
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598     068A                     _main:	
   599                           ;psect for function _main
   600                           
   601     068A                     l917:	
   602                           ;incstack = 0
   603                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   604                           
   605                           
   606                           ;newmain.c: 25:     init();
   607     068A  120A  118A  25D2  120A  118A  	fcall	_init
   608     068F                     l919:
   609                           
   610                           ;newmain.c: 26:     lcd_init();
   611     068F  120A  118A  2644  120A  118A  	fcall	_lcd_init
   612     0694                     l921:
   613                           
   614                           ;newmain.c: 27:     keyboard_init();
   615     0694  120A  118A  25D8  120A  118A  	fcall	_keyboard_init
   616     0699                     l923:
   617                           
   618                           ;newmain.c: 30:     lcd_goto(0, 1);
   619     0699  01F3               	clrf	lcd_goto@line
   620     069A  0AF3               	incf	lcd_goto@line,f
   621     069B  3000               	movlw	0
   622     069C  120A  118A  262B  120A  118A  	fcall	_lcd_goto
   623     06A1                     l925:
   624                           
   625                           ;newmain.c: 31:     lcd_puts("Tutorial EC3081:");
   626     06A1  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   627     06A2  00F3               	movwf	lcd_puts@s
   628     06A3  3080               	movlw	128
   629     06A4  00F4               	movwf	lcd_puts@s+1
   630     06A5  120A  118A  2664  120A  118A  	fcall	_lcd_puts
   631     06AA                     l927:
   632                           
   633                           ;newmain.c: 34:     unsigned char key = keyboard_get();
   634     06AA  120A  118A  26F3  120A  118A  	fcall	_keyboard_get
   635     06AF  00F8               	movwf	main@key
   636     06B0                     l929:
   637                           
   638                           ;newmain.c: 37:     char key_str[2] = {key, '\0'};
   639     06B0  01F5               	clrf	main@key_str
   640     06B1  01F6               	clrf	main@key_str+1
   641     06B2                     l931:
   642     06B2  0878               	movf	main@key,w
   643     06B3  00F5               	movwf	main@key_str
   644     06B4                     l933:
   645     06B4  01F6               	clrf	main@key_str+1
   646     06B5                     l935:
   647                           
   648                           ;newmain.c: 40:     lcd_goto(0, 2);
   649     06B5  3002               	movlw	2
   650     06B6  00F3               	movwf	lcd_goto@line
   651     06B7  3000               	movlw	0
   652     06B8  120A  118A  262B  120A  118A  	fcall	_lcd_goto
   653     06BD                     l937:
   654                           
   655                           ;newmain.c: 41:     lcd_puts(key_str);
   656     06BD  3075               	movlw	(low (main@key_str| 0))& (0+255)
   657     06BE  00F3               	movwf	lcd_puts@s
   658     06BF  3000               	movlw	0
   659     06C0  00F4               	movwf	lcd_puts@s+1
   660     06C1  120A  118A  2664  120A  118A  	fcall	_lcd_puts
   661     06C6                     l939:
   662                           
   663                           ;newmain.c: 45:         unsigned char new_key = keyboard_get();
   664     06C6  120A  118A  26F3  120A  118A  	fcall	_keyboard_get
   665     06CB  00F7               	movwf	main@new_key
   666     06CC                     l941:
   667                           
   668                           ;newmain.c: 48:         if(new_key != key) {
   669     06CC  0877               	movf	main@new_key,w
   670     06CD  0678               	xorwf	main@key,w
   671     06CE  1903               	skipnz
   672     06CF  2ED1               	goto	u541
   673     06D0  2ED2               	goto	u540
   674     06D1                     u541:
   675     06D1  2EC6               	goto	l939
   676     06D2                     u540:
   677     06D2                     l943:
   678                           
   679                           ;newmain.c: 50:             key = new_key;
   680     06D2  0877               	movf	main@new_key,w
   681     06D3  00F8               	movwf	main@key
   682                           
   683                           ;newmain.c: 53:             key_str[0] = key;
   684     06D4  0878               	movf	main@key,w
   685     06D5  00F5               	movwf	main@key_str
   686     06D6                     l945:
   687                           
   688                           ;newmain.c: 56:             lcd_goto(0, 2);
   689     06D6  3002               	movlw	2
   690     06D7  00F3               	movwf	lcd_goto@line
   691     06D8  3000               	movlw	0
   692     06D9  120A  118A  262B  120A  118A  	fcall	_lcd_goto
   693     06DE                     l947:
   694                           
   695                           ;newmain.c: 57:             lcd_puts("                ");
   696     06DE  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   697     06DF  00F3               	movwf	lcd_puts@s
   698     06E0  3080               	movlw	128
   699     06E1  00F4               	movwf	lcd_puts@s+1
   700     06E2  120A  118A  2664  120A  118A  	fcall	_lcd_puts
   701     06E7                     l949:
   702                           
   703                           ;newmain.c: 60:             lcd_goto(0, 2);
   704     06E7  3002               	movlw	2
   705     06E8  00F3               	movwf	lcd_goto@line
   706     06E9  3000               	movlw	0
   707     06EA  120A  118A  262B  120A  118A  	fcall	_lcd_goto
   708     06EF  2EBD               	goto	l937
   709     06F0  120A  118A  2800   	ljmp	start
   710     06F3                     __end_of_main:
   711                           
   712                           	psect	text1
   713     0664                     __ptext1:	
   714 ;; *************** function _lcd_puts *****************
   715 ;; Defined at:
   716 ;;		line 63 in file "lcd.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  s               2    3[COMMON] PTR const unsigned char 
   719 ;;		 -> STR_2(17), main@key_str(2), STR_1(17), 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   731 ;;      Params:         2       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0
   734 ;;      Totals:         2       0       0       0       0
   735 ;;Total ram usage:        2 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; Hardware stack levels required when called: 1
   738 ;; This function calls:
   739 ;;		_lcd_data
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745     0664                     _lcd_puts:	
   746                           ;psect for function _lcd_puts
   747                           
   748     0664                     l909:	
   749                           ;incstack = 0
   750                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   751                           
   752                           
   753                           ;lcd.c: 64:     while(*s) {
   754     0664  2E79               	goto	l915
   755     0665                     l911:
   756                           
   757                           ;lcd.c: 65:         lcd_data(*s++);
   758     0665  0874               	movf	lcd_puts@s+1,w
   759     0666  00FF               	movwf	btemp+1
   760     0667  0873               	movf	lcd_puts@s,w
   761     0668  0084               	movwf	4
   762     0669  120A  118A  2003  120A  118A  	fcall	stringtab
   763     066E  120A  118A  2617  120A  118A  	fcall	_lcd_data
   764     0673                     l913:
   765     0673  3001               	movlw	1
   766     0674  07F3               	addwf	lcd_puts@s,f
   767     0675  1803               	skipnc
   768     0676  0AF4               	incf	lcd_puts@s+1,f
   769     0677  3000               	movlw	0
   770     0678  07F4               	addwf	lcd_puts@s+1,f
   771     0679                     l915:
   772                           
   773                           ;lcd.c: 64:     while(*s) {
   774     0679  0874               	movf	lcd_puts@s+1,w
   775     067A  1283               	bcf	3,5	;RP0=0, select bank0
   776     067B  1303               	bcf	3,6	;RP1=0, select bank0
   777     067C  00FF               	movwf	btemp+1
   778     067D  0873               	movf	lcd_puts@s,w
   779     067E  0084               	movwf	4
   780     067F  120A  118A  2003  120A  118A  	fcall	stringtab
   781     0684  3A00               	xorlw	0
   782     0685  1D03               	skipz
   783     0686  2E88               	goto	u531
   784     0687  2E89               	goto	u530
   785     0688                     u531:
   786     0688  2E65               	goto	l911
   787     0689                     u530:
   788     0689                     l71:
   789     0689  0008               	return
   790     068A                     __end_of_lcd_puts:
   791                           
   792                           	psect	text2
   793     0617                     __ptext2:	
   794 ;; *************** function _lcd_data *****************
   795 ;; Defined at:
   796 ;;		line 29 in file "lcd.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  data            1    wreg     unsigned char 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  data            1    2[COMMON] unsigned char 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   810 ;;      Params:         0       0       0       0       0
   811 ;;      Locals:         1       0       0       0       0
   812 ;;      Temps:          2       0       0       0       0
   813 ;;      Totals:         3       0       0       0       0
   814 ;;Total ram usage:        3 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		_lcd_puts
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823     0617                     _lcd_data:	
   824                           ;psect for function _lcd_data
   825                           
   826                           
   827                           ;incstack = 0
   828                           ; Regs used in _lcd_data: [wreg]
   829                           ;lcd_data@data stored from wreg
   830     0617  00F2               	movwf	lcd_data@data
   831     0618                     l733:
   832                           
   833                           ;lcd.c: 30:     RC1 = 1;
   834     0618  1283               	bcf	3,5	;RP0=0, select bank0
   835     0619  1303               	bcf	3,6	;RP1=0, select bank0
   836     061A  1487               	bsf	7,1	;volatile
   837     061B                     l735:
   838                           
   839                           ;lcd.c: 31:     PORTD = data;
   840     061B  0872               	movf	lcd_data@data,w
   841     061C  0088               	movwf	8	;volatile
   842     061D                     l737:
   843                           
   844                           ;lcd.c: 32:     RC0 = 1;
   845     061D  1407               	bsf	7,0	;volatile
   846                           
   847                           ;lcd.c: 33:     _delay((unsigned long)((2)*(20000000/4000.0)));
   848     061E  300D               	movlw	13
   849     061F  00F1               	movwf	??_lcd_data+1
   850     0620  30FB               	movlw	251
   851     0621  00F0               	movwf	??_lcd_data
   852     0622                     u557:
   853     0622  0BF0               	decfsz	??_lcd_data,f
   854     0623  2E22               	goto	u557
   855     0624  0BF1               	decfsz	??_lcd_data+1,f
   856     0625  2E22               	goto	u557
   857     0626  2E27               	nop2
   858     0627                     l739:
   859                           
   860                           ;lcd.c: 34:     RC0 = 0;
   861     0627  1283               	bcf	3,5	;RP0=0, select bank0
   862     0628  1303               	bcf	3,6	;RP1=0, select bank0
   863     0629  1007               	bcf	7,0	;volatile
   864     062A                     l54:
   865     062A  0008               	return
   866     062B                     __end_of_lcd_data:
   867                           
   868                           	psect	text3
   869     0644                     __ptext3:	
   870 ;; *************** function _lcd_init *****************
   871 ;; Defined at:
   872 ;;		line 38 in file "lcd.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0
   889 ;;      Totals:         0       0       0       0       0
   890 ;;Total ram usage:        0 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; Hardware stack levels required when called: 1
   893 ;; This function calls:
   894 ;;		_lcd_cmd
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900     0644                     _lcd_init:	
   901                           ;psect for function _lcd_init
   902                           
   903     0644                     l745:	
   904                           ;incstack = 0
   905                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   906                           
   907                           
   908                           ;lcd.c: 39:     TRISC &= 0b11111100;
   909     0644  30FC               	movlw	252
   910     0645  00FF               	movwf	btemp+1
   911     0646  087F               	movf	btemp+1,w
   912     0647  1683               	bsf	3,5	;RP0=1, select bank1
   913     0648  1303               	bcf	3,6	;RP1=0, select bank1
   914     0649  0587               	andwf	7,f	;volatile
   915     064A                     l747:
   916                           
   917                           ;lcd.c: 40:     TRISD = 0x00;
   918     064A  0188               	clrf	8	;volatile
   919     064B                     l749:
   920                           
   921                           ;lcd.c: 41:     lcd_cmd(0x38);
   922     064B  3038               	movlw	56
   923     064C  120A  118A  25F1  120A  118A  	fcall	_lcd_cmd
   924     0651                     l751:
   925                           
   926                           ;lcd.c: 42:     lcd_cmd(0x0C);
   927     0651  300C               	movlw	12
   928     0652  120A  118A  25F1  120A  118A  	fcall	_lcd_cmd
   929     0657                     l753:
   930                           
   931                           ;lcd.c: 43:     lcd_cmd(0x06);
   932     0657  3006               	movlw	6
   933     0658  120A  118A  25F1  120A  118A  	fcall	_lcd_cmd
   934     065D                     l755:
   935                           
   936                           ;lcd.c: 44:     lcd_cmd(0x01);
   937     065D  3001               	movlw	1
   938     065E  120A  118A  25F1  120A  118A  	fcall	_lcd_cmd
   939     0663                     l57:
   940     0663  0008               	return
   941     0664                     __end_of_lcd_init:
   942                           
   943                           	psect	text4
   944     062B                     __ptext4:	
   945 ;; *************** function _lcd_goto *****************
   946 ;; Defined at:
   947 ;;		line 53 in file "lcd.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  pos             1    wreg     unsigned char 
   950 ;;  line            1    3[COMMON] unsigned char 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  pos             1    4[COMMON] unsigned char 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         1       0       0       0       0
   963 ;;      Locals:         1       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0
   965 ;;      Totals:         2       0       0       0       0
   966 ;;Total ram usage:        2 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 1
   969 ;; This function calls:
   970 ;;		_lcd_cmd
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976     062B                     _lcd_goto:	
   977                           ;psect for function _lcd_goto
   978                           
   979                           
   980                           ;incstack = 0
   981                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
   982                           ;lcd_goto@pos stored from wreg
   983     062B  00F4               	movwf	lcd_goto@pos
   984     062C                     l901:
   985                           
   986                           ;lcd.c: 54:     pos = pos & 0x0F;
   987     062C  0874               	movf	lcd_goto@pos,w
   988     062D  390F               	andlw	15
   989     062E  00F4               	movwf	lcd_goto@pos
   990     062F                     l903:
   991                           
   992                           ;lcd.c: 55:     if(line == 1) {
   993     062F  0373               	decf	lcd_goto@line,w
   994     0630  1D03               	btfss	3,2
   995     0631  2E33               	goto	u521
   996     0632  2E34               	goto	u520
   997     0633                     u521:
   998     0633  2E3C               	goto	l907
   999     0634                     u520:
  1000     0634                     l905:
  1001                           
  1002                           ;lcd.c: 56:         lcd_cmd(0x80 + pos);
  1003     0634  0874               	movf	lcd_goto@pos,w
  1004     0635  3E80               	addlw	128
  1005     0636  120A  118A  25F1  120A  118A  	fcall	_lcd_cmd
  1006                           
  1007                           ;lcd.c: 57:     } else {
  1008     063B  2E43               	goto	l65
  1009     063C                     l907:
  1010                           
  1011                           ;lcd.c: 58:         lcd_cmd(0xC0 + pos);
  1012     063C  0874               	movf	lcd_goto@pos,w
  1013     063D  3EC0               	addlw	192
  1014     063E  120A  118A  25F1  120A  118A  	fcall	_lcd_cmd
  1015     0643                     l65:
  1016     0643  0008               	return
  1017     0644                     __end_of_lcd_goto:
  1018                           
  1019                           	psect	text5
  1020     05F1                     __ptext5:	
  1021 ;; *************** function _lcd_cmd *****************
  1022 ;; Defined at:
  1023 ;;		line 20 in file "lcd.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  cmd             1    wreg     unsigned char 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  cmd             1    2[COMMON] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       0       0       0       0
  1038 ;;      Locals:         1       0       0       0       0
  1039 ;;      Temps:          2       0       0       0       0
  1040 ;;      Totals:         3       0       0       0       0
  1041 ;;Total ram usage:        3 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_lcd_init
  1047 ;;		_lcd_goto
  1048 ;;		_lcd_clear
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052     05F1                     _lcd_cmd:	
  1053                           ;psect for function _lcd_cmd
  1054                           
  1055                           
  1056                           ;incstack = 0
  1057                           ; Regs used in _lcd_cmd: [wreg]
  1058                           ;lcd_cmd@cmd stored from wreg
  1059     05F1  00F2               	movwf	lcd_cmd@cmd
  1060     05F2                     l725:
  1061                           
  1062                           ;lcd.c: 21:     RC1 = 0;
  1063     05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1064     05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1065     05F4  1087               	bcf	7,1	;volatile
  1066     05F5                     l727:
  1067                           
  1068                           ;lcd.c: 22:     PORTD = cmd;
  1069     05F5  0872               	movf	lcd_cmd@cmd,w
  1070     05F6  0088               	movwf	8	;volatile
  1071     05F7                     l729:
  1072                           
  1073                           ;lcd.c: 23:     RC0 = 1;
  1074     05F7  1407               	bsf	7,0	;volatile
  1075                           
  1076                           ;lcd.c: 24:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1077     05F8  3007               	movlw	7
  1078     05F9  00F1               	movwf	??_lcd_cmd+1
  1079     05FA  307D               	movlw	125
  1080     05FB  00F0               	movwf	??_lcd_cmd
  1081     05FC                     u567:
  1082     05FC  0BF0               	decfsz	??_lcd_cmd,f
  1083     05FD  2DFC               	goto	u567
  1084     05FE  0BF1               	decfsz	??_lcd_cmd+1,f
  1085     05FF  2DFC               	goto	u567
  1086     0600                     l731:
  1087                           
  1088                           ;lcd.c: 25:     RC0 = 0;
  1089     0600  1283               	bcf	3,5	;RP0=0, select bank0
  1090     0601  1303               	bcf	3,6	;RP1=0, select bank0
  1091     0602  1007               	bcf	7,0	;volatile
  1092     0603                     l51:
  1093     0603  0008               	return
  1094     0604                     __end_of_lcd_cmd:
  1095                           
  1096                           	psect	text6
  1097     05D8                     __ptext6:	
  1098 ;; *************** function _keyboard_init *****************
  1099 ;; Defined at:
  1100 ;;		line 10 in file "keypad.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, btemp+1
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         0       0       0       0       0
  1115 ;;      Locals:         0       0       0       0       0
  1116 ;;      Temps:          0       0       0       0       0
  1117 ;;      Totals:         0       0       0       0       0
  1118 ;;Total ram usage:        0 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127     05D8                     _keyboard_init:	
  1128                           ;psect for function _keyboard_init
  1129                           
  1130     05D8                     l757:	
  1131                           ;incstack = 0
  1132                           ; Regs used in _keyboard_init: [wreg+status,2+status,0+btemp+1]
  1133                           
  1134                           
  1135                           ;keypad.c: 13:     TRISB = 0XF0;
  1136     05D8  30F0               	movlw	240
  1137     05D9  1683               	bsf	3,5	;RP0=1, select bank1
  1138     05DA  1303               	bcf	3,6	;RP1=0, select bank1
  1139     05DB  0086               	movwf	6	;volatile
  1140     05DC                     l759:
  1141                           
  1142                           ;keypad.c: 15:     OPTION_REG &= 0X7F;
  1143     05DC  307F               	movlw	127
  1144     05DD  00FF               	movwf	btemp+1
  1145     05DE  087F               	movf	btemp+1,w
  1146     05DF  0581               	andwf	1,f	;volatile
  1147     05E0                     l100:
  1148     05E0  0008               	return
  1149     05E1                     __end_of_keyboard_init:
  1150                           
  1151                           	psect	text7
  1152     06F3                     __ptext7:	
  1153 ;; *************** function _keyboard_get *****************
  1154 ;; Defined at:
  1155 ;;		line 19 in file "keypad.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      unsigned char 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1169 ;;      Params:         0       0       0       0       0
  1170 ;;      Locals:         0       0       0       0       0
  1171 ;;      Temps:          3       0       0       0       0
  1172 ;;      Totals:         3       0       0       0       0
  1173 ;;Total ram usage:        3 bytes
  1174 ;; Hardware stack levels used: 1
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182     06F3                     _keyboard_get:	
  1183                           ;psect for function _keyboard_get
  1184                           
  1185     06F3                     l777:	
  1186                           ;incstack = 0
  1187                           ; Regs used in _keyboard_get: [wreg-fsr0h+status,2+status,0]
  1188                           
  1189                           
  1190                           ;keypad.c: 22:     PORTB = 0X00;
  1191     06F3  1283               	bcf	3,5	;RP0=0, select bank0
  1192     06F4  1303               	bcf	3,6	;RP1=0, select bank0
  1193     06F5  0186               	clrf	6	;volatile
  1194     06F6                     l103:	
  1195                           ;keypad.c: 25:     while (RB4 && RB5 && RB6 && RB7);
  1196                           
  1197     06F6  1E06               	btfss	6,4	;volatile
  1198     06F7  2EF9               	goto	u31
  1199     06F8  2EFA               	goto	u30
  1200     06F9                     u31:
  1201     06F9  2F6C               	goto	l108
  1202     06FA                     u30:
  1203     06FA                     l779:
  1204     06FA  1E86               	btfss	6,5	;volatile
  1205     06FB  2EFD               	goto	u41
  1206     06FC  2EFE               	goto	u40
  1207     06FD                     u41:
  1208     06FD  2F6C               	goto	l108
  1209     06FE                     u40:
  1210     06FE                     l781:
  1211     06FE  1F06               	btfss	6,6	;volatile
  1212     06FF  2F01               	goto	u51
  1213     0700  2F02               	goto	u50
  1214     0701                     u51:
  1215     0701  2F6C               	goto	l108
  1216     0702                     u50:
  1217     0702                     l783:
  1218     0702  1B86               	btfsc	6,7	;volatile
  1219     0703  2F05               	goto	u61
  1220     0704  2F06               	goto	u60
  1221     0705                     u61:
  1222     0705  2EF6               	goto	l103
  1223     0706                     u60:
  1224     0706  2F6C               	goto	l108
  1225     0707                     l109:
  1226                           
  1227                           ;keypad.c: 29:     {;keypad.c: 31:         RB1 = RB2 = RB3 = 1;
  1228     0707  1586               	bsf	6,3	;volatile
  1229     0708  1986               	btfsc	6,3	;volatile
  1230     0709  2F0B               	goto	u71
  1231     070A  2F0F               	goto	u70
  1232     070B                     u71:
  1233     070B  1283               	bcf	3,5	;RP0=0, select bank0
  1234     070C  1303               	bcf	3,6	;RP1=0, select bank0
  1235     070D  1506               	bsf	6,2	;volatile
  1236     070E  2F12               	goto	u84
  1237     070F                     u70:
  1238     070F  1283               	bcf	3,5	;RP0=0, select bank0
  1239     0710  1303               	bcf	3,6	;RP1=0, select bank0
  1240     0711  1106               	bcf	6,2	;volatile
  1241     0712                     u84:
  1242     0712  1906               	btfsc	6,2	;volatile
  1243     0713  2F15               	goto	u81
  1244     0714  2F19               	goto	u80
  1245     0715                     u81:
  1246     0715  1283               	bcf	3,5	;RP0=0, select bank0
  1247     0716  1303               	bcf	3,6	;RP1=0, select bank0
  1248     0717  1486               	bsf	6,1	;volatile
  1249     0718  2F1C               	goto	u94
  1250     0719                     u80:
  1251     0719  1283               	bcf	3,5	;RP0=0, select bank0
  1252     071A  1303               	bcf	3,6	;RP1=0, select bank0
  1253     071B  1086               	bcf	6,1	;volatile
  1254     071C                     u94:
  1255                           
  1256                           ;keypad.c: 32:         if (!RB4 || !RB5 || !RB6 || !RB7)
  1257     071C  1E06               	btfss	6,4	;volatile
  1258     071D  2F1F               	goto	u101
  1259     071E  2F20               	goto	u100
  1260     071F                     u101:
  1261     071F  2F2C               	goto	l791
  1262     0720                     u100:
  1263     0720                     l785:
  1264     0720  1E86               	btfss	6,5	;volatile
  1265     0721  2F23               	goto	u111
  1266     0722  2F24               	goto	u110
  1267     0723                     u111:
  1268     0723  2F2C               	goto	l791
  1269     0724                     u110:
  1270     0724                     l787:
  1271     0724  1F06               	btfss	6,6	;volatile
  1272     0725  2F27               	goto	u121
  1273     0726  2F28               	goto	u120
  1274     0727                     u121:
  1275     0727  2F2C               	goto	l791
  1276     0728                     u120:
  1277     0728                     l789:
  1278     0728  1B86               	btfsc	6,7	;volatile
  1279     0729  2F2B               	goto	u131
  1280     072A  2F2C               	goto	u130
  1281     072B                     u131:
  1282     072B  2F2E               	goto	l110
  1283     072C                     u130:
  1284     072C                     l791:
  1285                           
  1286                           ;keypad.c: 33:         {;keypad.c: 34:             rowloc = 0;
  1287     072C  01FC               	clrf	_rowloc
  1288                           
  1289                           ;keypad.c: 35:             break;
  1290     072D  2F7C               	goto	l113
  1291     072E                     l110:	
  1292                           ;keypad.c: 36:         }
  1293                           
  1294                           
  1295                           ;keypad.c: 37:         RB1 = 0;
  1296     072E  1086               	bcf	6,1	;volatile
  1297                           
  1298                           ;keypad.c: 38:         if (!RB4 || !RB5 || !RB6 || !RB7)
  1299     072F  1E06               	btfss	6,4	;volatile
  1300     0730  2F32               	goto	u141
  1301     0731  2F33               	goto	u140
  1302     0732                     u141:
  1303     0732  2F3F               	goto	l116
  1304     0733                     u140:
  1305     0733                     l793:
  1306     0733  1E86               	btfss	6,5	;volatile
  1307     0734  2F36               	goto	u151
  1308     0735  2F37               	goto	u150
  1309     0736                     u151:
  1310     0736  2F3F               	goto	l116
  1311     0737                     u150:
  1312     0737                     l795:
  1313     0737  1F06               	btfss	6,6	;volatile
  1314     0738  2F3A               	goto	u161
  1315     0739  2F3B               	goto	u160
  1316     073A                     u161:
  1317     073A  2F3F               	goto	l116
  1318     073B                     u160:
  1319     073B                     l797:
  1320     073B  1B86               	btfsc	6,7	;volatile
  1321     073C  2F3E               	goto	u171
  1322     073D  2F3F               	goto	u170
  1323     073E                     u171:
  1324     073E  2F42               	goto	l114
  1325     073F                     u170:
  1326     073F                     l116:
  1327                           
  1328                           ;keypad.c: 39:         {;keypad.c: 40:             rowloc = 1;
  1329     073F  01FC               	clrf	_rowloc
  1330     0740  0AFC               	incf	_rowloc,f
  1331                           
  1332                           ;keypad.c: 41:             break;
  1333     0741  2F7C               	goto	l113
  1334     0742                     l114:	
  1335                           ;keypad.c: 42:         }
  1336                           
  1337                           
  1338                           ;keypad.c: 43:         RB2 = 0;
  1339     0742  1106               	bcf	6,2	;volatile
  1340                           
  1341                           ;keypad.c: 44:         RB1 = 1;
  1342     0743  1486               	bsf	6,1	;volatile
  1343                           
  1344                           ;keypad.c: 45:         if (!RB4 || !RB5 || !RB6 || !RB7)
  1345     0744  1E06               	btfss	6,4	;volatile
  1346     0745  2F47               	goto	u181
  1347     0746  2F48               	goto	u180
  1348     0747                     u181:
  1349     0747  2F54               	goto	l805
  1350     0748                     u180:
  1351     0748                     l799:
  1352     0748  1E86               	btfss	6,5	;volatile
  1353     0749  2F4B               	goto	u191
  1354     074A  2F4C               	goto	u190
  1355     074B                     u191:
  1356     074B  2F54               	goto	l805
  1357     074C                     u190:
  1358     074C                     l801:
  1359     074C  1F06               	btfss	6,6	;volatile
  1360     074D  2F4F               	goto	u201
  1361     074E  2F50               	goto	u200
  1362     074F                     u201:
  1363     074F  2F54               	goto	l805
  1364     0750                     u200:
  1365     0750                     l803:
  1366     0750  1B86               	btfsc	6,7	;volatile
  1367     0751  2F53               	goto	u211
  1368     0752  2F54               	goto	u210
  1369     0753                     u211:
  1370     0753  2F57               	goto	l117
  1371     0754                     u210:
  1372     0754                     l805:
  1373                           
  1374                           ;keypad.c: 46:         {;keypad.c: 47:             rowloc = 2;
  1375     0754  3002               	movlw	2
  1376     0755  00FC               	movwf	_rowloc
  1377                           
  1378                           ;keypad.c: 48:             break;
  1379     0756  2F7C               	goto	l113
  1380     0757                     l117:	
  1381                           ;keypad.c: 49:         }
  1382                           
  1383                           
  1384                           ;keypad.c: 50:         RB3 = 0;
  1385     0757  1186               	bcf	6,3	;volatile
  1386                           
  1387                           ;keypad.c: 51:         RB2 = 1;
  1388     0758  1506               	bsf	6,2	;volatile
  1389                           
  1390                           ;keypad.c: 52:         if (!RB4 || !RB5 || !RB6 || !RB7)
  1391     0759  1E06               	btfss	6,4	;volatile
  1392     075A  2F5C               	goto	u221
  1393     075B  2F5D               	goto	u220
  1394     075C                     u221:
  1395     075C  2F69               	goto	l813
  1396     075D                     u220:
  1397     075D                     l807:
  1398     075D  1E86               	btfss	6,5	;volatile
  1399     075E  2F60               	goto	u231
  1400     075F  2F61               	goto	u230
  1401     0760                     u231:
  1402     0760  2F69               	goto	l813
  1403     0761                     u230:
  1404     0761                     l809:
  1405     0761  1F06               	btfss	6,6	;volatile
  1406     0762  2F64               	goto	u241
  1407     0763  2F65               	goto	u240
  1408     0764                     u241:
  1409     0764  2F69               	goto	l813
  1410     0765                     u240:
  1411     0765                     l811:
  1412     0765  1B86               	btfsc	6,7	;volatile
  1413     0766  2F68               	goto	u251
  1414     0767  2F69               	goto	u250
  1415     0768                     u251:
  1416     0768  2F6C               	goto	l108
  1417     0769                     u250:
  1418     0769                     l813:
  1419                           
  1420                           ;keypad.c: 53:         {;keypad.c: 54:             rowloc = 3;
  1421     0769  3003               	movlw	3
  1422     076A  00FC               	movwf	_rowloc
  1423                           
  1424                           ;keypad.c: 55:             break;
  1425     076B  2F7C               	goto	l113
  1426     076C                     l108:	
  1427                           ;keypad.c: 57:     }
  1428                           
  1429                           
  1430                           ;keypad.c: 28:     while (!RB4 || !RB5 || !RB6 || !RB7)
  1431     076C  1E06               	btfss	6,4	;volatile
  1432     076D  2F6F               	goto	u261
  1433     076E  2F70               	goto	u260
  1434     076F                     u261:
  1435     076F  2F07               	goto	l109
  1436     0770                     u260:
  1437     0770                     l815:
  1438     0770  1E86               	btfss	6,5	;volatile
  1439     0771  2F73               	goto	u271
  1440     0772  2F74               	goto	u270
  1441     0773                     u271:
  1442     0773  2F07               	goto	l109
  1443     0774                     u270:
  1444     0774                     l817:
  1445     0774  1F06               	btfss	6,6	;volatile
  1446     0775  2F77               	goto	u281
  1447     0776  2F78               	goto	u280
  1448     0777                     u281:
  1449     0777  2F07               	goto	l109
  1450     0778                     u280:
  1451     0778                     l819:
  1452     0778  1F86               	btfss	6,7	;volatile
  1453     0779  2F7B               	goto	u291
  1454     077A  2F7C               	goto	u290
  1455     077B                     u291:
  1456     077B  2F07               	goto	l109
  1457     077C                     u290:
  1458     077C                     l113:
  1459                           
  1460                           ;keypad.c: 60:     if (RB4 == 0 && RB5 != 0 && RB6 != 0 && RB7 != 0)
  1461     077C  1A06               	btfsc	6,4	;volatile
  1462     077D  2F7F               	goto	u301
  1463     077E  2F80               	goto	u300
  1464     077F                     u301:
  1465     077F  2F8E               	goto	l123
  1466     0780                     u300:
  1467     0780                     l821:
  1468     0780  1E86               	btfss	6,5	;volatile
  1469     0781  2F83               	goto	u311
  1470     0782  2F84               	goto	u310
  1471     0783                     u311:
  1472     0783  2F8E               	goto	l123
  1473     0784                     u310:
  1474     0784                     l823:
  1475     0784  1F06               	btfss	6,6	;volatile
  1476     0785  2F87               	goto	u321
  1477     0786  2F88               	goto	u320
  1478     0787                     u321:
  1479     0787  2F8E               	goto	l123
  1480     0788                     u320:
  1481     0788                     l825:
  1482     0788  1F86               	btfss	6,7	;volatile
  1483     0789  2F8B               	goto	u331
  1484     078A  2F8C               	goto	u330
  1485     078B                     u331:
  1486     078B  2F8E               	goto	l123
  1487     078C                     u330:
  1488     078C                     l827:
  1489                           
  1490                           ;keypad.c: 61:         colloc = 0;
  1491     078C  01FB               	clrf	_colloc
  1492     078D  2FC7               	goto	l130
  1493     078E                     l123:	
  1494                           ;keypad.c: 62:     else if (RB4 != 0 && RB5 == 0 && RB6 != 0 && RB7 != 0)
  1495                           
  1496     078E  1E06               	btfss	6,4	;volatile
  1497     078F  2F91               	goto	u341
  1498     0790  2F92               	goto	u340
  1499     0791                     u341:
  1500     0791  2FA1               	goto	l125
  1501     0792                     u340:
  1502     0792                     l829:
  1503     0792  1A86               	btfsc	6,5	;volatile
  1504     0793  2F95               	goto	u351
  1505     0794  2F96               	goto	u350
  1506     0795                     u351:
  1507     0795  2FA1               	goto	l125
  1508     0796                     u350:
  1509     0796                     l831:
  1510     0796  1F06               	btfss	6,6	;volatile
  1511     0797  2F99               	goto	u361
  1512     0798  2F9A               	goto	u360
  1513     0799                     u361:
  1514     0799  2FA1               	goto	l125
  1515     079A                     u360:
  1516     079A                     l833:
  1517     079A  1F86               	btfss	6,7	;volatile
  1518     079B  2F9D               	goto	u371
  1519     079C  2F9E               	goto	u370
  1520     079D                     u371:
  1521     079D  2FA1               	goto	l125
  1522     079E                     u370:
  1523     079E                     l835:
  1524                           
  1525                           ;keypad.c: 63:         colloc = 1;
  1526     079E  01FB               	clrf	_colloc
  1527     079F  0AFB               	incf	_colloc,f
  1528     07A0  2FC7               	goto	l130
  1529     07A1                     l125:	
  1530                           ;keypad.c: 64:     else if (RB4 != 0 && RB5 != 0 && RB6 == 0 && RB7 != 0)
  1531                           
  1532     07A1  1E06               	btfss	6,4	;volatile
  1533     07A2  2FA4               	goto	u381
  1534     07A3  2FA5               	goto	u380
  1535     07A4                     u381:
  1536     07A4  2FB4               	goto	l127
  1537     07A5                     u380:
  1538     07A5                     l837:
  1539     07A5  1E86               	btfss	6,5	;volatile
  1540     07A6  2FA8               	goto	u391
  1541     07A7  2FA9               	goto	u390
  1542     07A8                     u391:
  1543     07A8  2FB4               	goto	l127
  1544     07A9                     u390:
  1545     07A9                     l839:
  1546     07A9  1B06               	btfsc	6,6	;volatile
  1547     07AA  2FAC               	goto	u401
  1548     07AB  2FAD               	goto	u400
  1549     07AC                     u401:
  1550     07AC  2FB4               	goto	l127
  1551     07AD                     u400:
  1552     07AD                     l841:
  1553     07AD  1F86               	btfss	6,7	;volatile
  1554     07AE  2FB0               	goto	u411
  1555     07AF  2FB1               	goto	u410
  1556     07B0                     u411:
  1557     07B0  2FB4               	goto	l127
  1558     07B1                     u410:
  1559     07B1                     l843:
  1560                           
  1561                           ;keypad.c: 65:         colloc = 2;
  1562     07B1  3002               	movlw	2
  1563     07B2  00FB               	movwf	_colloc
  1564     07B3  2FC7               	goto	l130
  1565     07B4                     l127:	
  1566                           ;keypad.c: 66:     else if (RB4 != 0 && RB5 != 0 && RB6 != 0 && RB7 == 0)
  1567                           
  1568     07B4  1E06               	btfss	6,4	;volatile
  1569     07B5  2FB7               	goto	u421
  1570     07B6  2FB8               	goto	u420
  1571     07B7                     u421:
  1572     07B7  2FC7               	goto	l126
  1573     07B8                     u420:
  1574     07B8                     l845:
  1575     07B8  1E86               	btfss	6,5	;volatile
  1576     07B9  2FBB               	goto	u431
  1577     07BA  2FBC               	goto	u430
  1578     07BB                     u431:
  1579     07BB  2FC7               	goto	l126
  1580     07BC                     u430:
  1581     07BC                     l847:
  1582     07BC  1F06               	btfss	6,6	;volatile
  1583     07BD  2FBF               	goto	u441
  1584     07BE  2FC0               	goto	u440
  1585     07BF                     u441:
  1586     07BF  2FC7               	goto	l126
  1587     07C0                     u440:
  1588     07C0                     l849:
  1589     07C0  1B86               	btfsc	6,7	;volatile
  1590     07C1  2FC3               	goto	u451
  1591     07C2  2FC4               	goto	u450
  1592     07C3                     u451:
  1593     07C3  2FC7               	goto	l126
  1594     07C4                     u450:
  1595     07C4                     l851:
  1596                           
  1597                           ;keypad.c: 67:         colloc = 3;
  1598     07C4  3003               	movlw	3
  1599     07C5  00FB               	movwf	_colloc
  1600     07C6  2FC7               	goto	l130
  1601     07C7                     l126:
  1602     07C7                     l130:
  1603     07C7  1E06               	btfss	6,4	;volatile
  1604     07C8  2FCA               	goto	u461
  1605     07C9  2FCB               	goto	u460
  1606     07CA                     u461:
  1607     07CA  2FC7               	goto	l130
  1608     07CB                     u460:
  1609     07CB                     l853:
  1610     07CB  1E86               	btfss	6,5	;volatile
  1611     07CC  2FCE               	goto	u471
  1612     07CD  2FCF               	goto	u470
  1613     07CE                     u471:
  1614     07CE  2FC7               	goto	l130
  1615     07CF                     u470:
  1616     07CF                     l855:
  1617     07CF  1F06               	btfss	6,6	;volatile
  1618     07D0  2FD2               	goto	u481
  1619     07D1  2FD3               	goto	u480
  1620     07D2                     u481:
  1621     07D2  2FC7               	goto	l130
  1622     07D3                     u480:
  1623     07D3                     l857:
  1624     07D3  1F86               	btfss	6,7	;volatile
  1625     07D4  2FD6               	goto	u491
  1626     07D5  2FD7               	goto	u490
  1627     07D6                     u491:
  1628     07D6  2FC7               	goto	l130
  1629     07D7                     u490:
  1630     07D7                     l859:
  1631                           
  1632                           ;keypad.c: 73:     return (keypad[rowloc][colloc]);
  1633     07D7  087C               	movf	_rowloc,w
  1634     07D8  00F0               	movwf	??_keyboard_get
  1635     07D9  3002               	movlw	2
  1636     07DA                     u505:
  1637     07DA  1003               	clrc
  1638     07DB  0DF0               	rlf	??_keyboard_get,f
  1639     07DC  3EFF               	addlw	-1
  1640     07DD  1D03               	skipz
  1641     07DE  2FDA               	goto	u505
  1642     07DF  3020               	movlw	(low (_keypad| 0))& (0+255)
  1643     07E0  0770               	addwf	??_keyboard_get,w
  1644     07E1  00F1               	movwf	??_keyboard_get+1
  1645     07E2  087B               	movf	_colloc,w
  1646     07E3  0771               	addwf	??_keyboard_get+1,w
  1647     07E4  00F2               	movwf	??_keyboard_get+2
  1648     07E5  0872               	movf	??_keyboard_get+2,w
  1649     07E6  0084               	movwf	4
  1650     07E7  1383               	bcf	3,7	;select IRP bank0
  1651     07E8  0800               	movf	0,w
  1652     07E9                     l133:
  1653     07E9  0008               	return
  1654     07EA                     __end_of_keyboard_get:
  1655                           
  1656                           	psect	text8
  1657     05D2                     __ptext8:	
  1658 ;; *************** function _init *****************
  1659 ;; Defined at:
  1660 ;;		line 18 in file "newmain.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		status,2
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         0       0       0       0       0
  1675 ;;      Locals:         0       0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0
  1677 ;;      Totals:         0       0       0       0       0
  1678 ;;Total ram usage:        0 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687     05D2                     _init:	
  1688                           ;psect for function _init
  1689                           
  1690     05D2                     l741:	
  1691                           ;incstack = 0
  1692                           ; Regs used in _init: [status,2]
  1693                           
  1694                           
  1695                           ;newmain.c: 19:     TRISA3 = 0;
  1696     05D2  1683               	bsf	3,5	;RP0=1, select bank1
  1697     05D3  1303               	bcf	3,6	;RP1=0, select bank1
  1698     05D4  1185               	bcf	5,3	;volatile
  1699     05D5                     l743:
  1700                           
  1701                           ;newmain.c: 20:     TRISD = 0x00;
  1702     05D5  0188               	clrf	8	;volatile
  1703                           
  1704                           ;newmain.c: 21:     TRISC = 0x00;
  1705     05D6  0187               	clrf	7	;volatile
  1706     05D7                     l25:
  1707     05D7  0008               	return
  1708     05D8                     __end_of_init:
  1709     007E                     btemp	set	126	;btemp
  1710     007E                     wtemp0	set	126
  1711                           
  1712                           	psect	config
  1713                           
  1714                           ;Config register CONFIG @ 0x2007
  1715                           ;	Oscillator Selection bits
  1716                           ;	FOSC = HS, HS oscillator
  1717                           ;	Watchdog Timer Enable bit
  1718                           ;	WDTE = OFF, WDT disabled
  1719                           ;	Power-up Timer Enable bit
  1720                           ;	PWRTE = OFF, PWRT disabled
  1721                           ;	Brown-out Reset Enable bit
  1722                           ;	BOREN = ON, BOR enabled
  1723                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1724                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1725                           ;	Data EEPROM Memory Code Protection bit
  1726                           ;	CPD = OFF, Data EEPROM code protection off
  1727                           ;	Flash Program Memory Write Enable bits
  1728                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1729                           ;	In-Circuit Debugger Mode bit
  1730                           ;	DEBUG = 0x1, unprogrammed default
  1731                           ;	Flash Program Memory Code Protection bit
  1732                           ;	CP = OFF, Code protection off
  1733     2007                     	org	8199
  1734     2007  3F7A               	dw	16250

Data Sizes:
    Strings     34
    Constant    0
    Data        16
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), main@key_str(COMMON[2]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_goto
    _main->_lcd_puts
    _lcd_puts->_lcd_data
    _lcd_init->_lcd_cmd
    _lcd_goto->_lcd_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     973
                                              5 COMMON     4     4      0
                               _init
                       _keyboard_get
                      _keyboard_init
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     364
                                              3 COMMON     2     0      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     1      1     408
                                              3 COMMON     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _keyboard_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keyboard_get                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _keyboard_get
   _keyboard_init
   _lcd_goto
     _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_puts
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Feb 21 10:26:11 2024

                      pc 0002             lcd_data@data 0072                       l25 05D7  
                     l51 0603                       l54 062A                       l71 0689  
                     l65 0643                       l57 0663                       u30 06FA  
                     u31 06F9                       u40 06FE                       u41 06FD  
                     u50 0702                       u51 0701                       u60 0706  
                     u61 0705                       u70 070F                       u71 070B  
                     u80 0719                       u81 0715                       u84 0712  
                     u94 071C                       fsr 0004                      l100 05E0  
                    l110 072E                      l103 06F6                      l113 077C  
                    l130 07C7                      l114 0742                      l123 078E  
                    l116 073F                      l108 076C                      l133 07E9  
                    l125 07A1                      l117 0757                      l109 0707  
                    l126 07C7                      l127 07B4                      l801 074C  
                    l811 0765                      l803 0750                      l731 0600  
                    l741 05D2                      l821 0780                      l813 0769  
                    l805 0754                      l725 05F2                      l901 062C  
                    l733 0618                      l743 05D5                      l831 0796  
                    l823 0784                      l815 0770                      l807 075D  
                    l727 05F5                      l903 062F                      l751 0651  
                    l735 061B                      l911 0665                      l841 07AD  
                    l833 079A                      l825 0788                      l817 0774  
                    l809 0761                      l729 05F7                      l905 0634  
                    l753 0657                      l745 0644                      l737 061D  
                    l913 0673                      l921 0694                      l851 07C4  
                    l843 07B1                      l835 079E                      l827 078C  
                    l819 0778                      l907 063C                      l755 065D  
                    l747 064A                      l739 0627                      l915 0679  
                    l931 06B2                      l923 0699                      l853 07CB  
                    l845 07B8                      l837 07A5                      l829 0792  
                    l781 06FE                      l757 05D8                      l749 064B  
                    l909 0664                      l941 06CC                      l933 06B4  
                    l925 06A1                      l917 068A                      l855 07CF  
                    l847 07BC                      l839 07A9                      l791 072C  
                    l783 0702                      l759 05DC                      l943 06D2  
                    l935 06B5                      l927 06AA                      l919 068F  
                    l857 07D3                      l849 07C0                      l793 0733  
                    l785 0720                      l777 06F3                      l945 06D6  
                    l937 06BD                      l929 06B0                      l859 07D7  
                    l795 0737                      l787 0724                      l779 06FA  
                    l947 06DE                      l939 06C6                      l797 073B  
                    l789 0728                      l949 06E7                      l799 0748  
                    _RB1 0031                      _RC0 0038                      _RB2 0032  
                    _RC1 0039                      _RB3 0033                      _RB4 0034  
                    _RB5 0035                      _RB6 0036                      _RB7 0037  
                    u100 0720                      u101 071F                      u110 0724  
                    u111 0723                      u200 0750                      u120 0728  
                    u201 074F                      u121 0727                      u210 0754  
                    u130 072C                      u211 0753                      u131 072B  
                    u300 0780                      u220 075D                      u140 0733  
                    u301 077F                      u221 075C                      u141 0732  
                    u310 0784                      u230 0761                      u150 0737  
                    u311 0783                      u231 0760                      u151 0736  
                    u400 07AD                      u320 0788                      u240 0765  
                    u160 073B                      u401 07AC                      u321 0787  
                    u241 0764                      u161 073A                      u410 07B1  
                    u330 078C                      u250 0769                      u170 073F  
                    u411 07B0                      u331 078B                      u251 0768  
                    u171 073E                      u420 07B8                      u340 0792  
                    u260 0770                      u180 0748                      u421 07B7  
                    u341 0791                      u261 076F                      u181 0747  
                    u430 07BC                      u350 0796                      u270 0774  
                    u190 074C                      u431 07BB                      u351 0795  
                    u271 0773                      u191 074B                      u440 07C0  
                    u360 079A                      u280 0778                      u520 0634  
                    u505 07DA                      u441 07BF                      u361 0799  
                    u281 0777                      u521 0633                      u450 07C4  
                    u370 079E                      u290 077C                      u530 0689  
                    u451 07C3                      u371 079D                      u291 077B  
                    u531 0688                      u460 07CB                      u380 07A5  
                    u540 06D2                      u461 07CA                      u381 07A4  
                    u541 06D1                      u470 07CF                      u390 07A9  
                    u471 07CE                      u391 07A8                      u480 07D3  
                    u481 07D2                      u490 07D7                      u491 07D6  
                    u557 0622                      u567 05FC                      fsr0 0004  
                    indf 0000              lcd_goto@pos 0074                     STR_1 0024  
                   STR_2 0013              main@key_str 0075              main@new_key 0077  
                   _main 068A                     _init 05D2                     btemp 007E  
           lcd_goto@line 0073                     start 0000                    ?_main 0070  
                  ?_init 0070                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_lcd_cmd 0604                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EA             __end_of_main 06F3  
           __end_of_init 05D8                   ??_main 0075                   ??_init 0070  
          ?_keyboard_get 0070                   _TRISA3 042B         __end_of_lcd_data 062B  
       __end_of_lcd_init 0664         __end_of_lcd_goto 0644         __end_of_lcd_puts 068A  
                 _colloc 007B                   _keypad 0020                ??_lcd_cmd 0070  
                 _rowloc 007C           ??_keyboard_get 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 05E1            _keyboard_init 05D8  
             __pmaintext 068A           ?_keyboard_init 0070                ?_lcd_data 0070  
              ?_lcd_init 0070                ?_lcd_goto 0073                ?_lcd_puts 0073  
             __stringtab 0003     __end_of_keyboard_get 07EA                  __ptext1 0664  
                __ptext2 0617                  __ptext3 0644                  __ptext4 062B  
                __ptext5 05F1                  __ptext6 05D8                  __ptext7 06F3  
                __ptext8 05D2                  _lcd_cmd 05F1               ??_lcd_data 0070  
                main@key 0078               ??_lcd_init 0073               ??_lcd_goto 0074  
             ??_lcd_puts 0075     end_of_initialization 07FC          ??_keyboard_init 0070  
             lcd_cmd@cmd 0072      start_initialization 07EA               init_fetch0 0604  
            __pdataBANK0 0020              __pbssCOMMON 0079                ___latbits 0002  
           _keyboard_get 06F3                __pstrings 0003                 ?_lcd_cmd 0070  
            __stringbase 0012                lcd_puts@s 0073       __end_of__stringtab 0013  
  __end_of_keyboard_init 05E1                 _lcd_data 0617                 _lcd_init 0644  
               _lcd_goto 062B                 _lcd_puts 0664                 main@F953 0079  
               init_ram0 0608                stringcode 000D               _OPTION_REG 0081  
               stringdir 000D                 stringtab 0003  
